cpuread() {
  while read FREQ UVOLT UNIT; do
    if [ $FREQ == $1 ]; then
      echo $UVOLT;
      return;
    fi;
  done < $P;
}

cpuwrite() {
  VOLTARR="";
  while read FREQ UVOLT UNIT; do
    if [ $FREQ == $1 ]; then
      VOLTARR="$VOLTARR $2";
    else
      VOLTARR="$VOLTARR $UVOLT";
    fi;
  done < $P;

  echo $VOLTARR > $P;
}

case $1 in
  cpuvoltglobal)
    VOLT_PROF=/data/.emotionkernel/volt_prof;
    P=/sys/devices/system/cpu/cpu0/cpufreq/UV_mV_table;
    
    if [ -f $P ]; then
      if [[ ! -z $3 ]]; then
        VOLT=$3;
        CURR_VOLT=`$BB cat $VOLT_PROF`;
        NEW_VOLT=$((VOLT - CURR_VOLT));
        $BB echo $VOLT > $VOLT_PROF;
        
        VOLTARR="";
        while read FREQ UVOLT UNIT; do
          VOLTARR="$VOLTARR $((UVOLT + NEW_VOLT))";
        done < $P;

        $BB echo "$VOLTARR" > $P 2> /dev/null;
      fi;
      
      V=`$BB cat $VOLT_PROF 2> /dev/null`;
      
      if [ -z "$V" ]; then $BB echo 0; else $BB echo $V; fi;
    fi;
  ;;
	cpuvolt)
		P=/sys/devices/system/cpu/cpu0/cpufreq/UV_mV_table;
		
		if [[ ! -z $3 ]]; then
			cpuwrite $2 $3;
		fi;
		
		echo `cpuread $2`;
	;;

esac;

