#!/system/bin/sh

cat << CTAG
{
    name:GPU,
    elements:[
	{ SLiveLabel:{
		title:"GPU Frenquency",
		refresh:1000,
		action:"show gpu"
	}},
	{ SPane:{
		title:"GPU Governor"
	}},
	{ SOptionList:{
		title:"Set governor",
		default:`cat /sys/class/kgsl/kgsl-3d0/devfreq/governor`,
		action:"generic /sys/class/kgsl/kgsl-3d0/devfreq/governor",
		values:[cache_hwmon, cpubw_hwmon,msm-adreno-tz, userspace, powersave, performance, simple_ondemand, msm_cpufreq,]
	}},
	{ SPane:{
		title:"GPU Frequency"
	}},
	{ SSeekBar:{
		title:"Set max frequency",
		description:" Set the maximum frequency the GPU scales up to.",
		unit:" MHz",
		weight:0.000001,
		default:`cat /sys/class/kgsl/kgsl-3d0/max_gpuclk`,
		action:"generic /sys/class/kgsl/kgsl-3d0/max_gpuclk",
		values:[`while read values; do busybox printf "%s, \n" $values; done < /sys/class/kgsl/kgsl-3d0/gpu_available_frequencies`]
	}},
	{ SSeekBar:{
		title:"Set min frequency",
		description:" Set the minimum frequency the GPU scales down to.",
		unit:" MHz",
		weight:0.000001,
		default:`cat /sys/class/kgsl/kgsl-3d0/devfreq/min_freq`,
		action:"generic /sys/class/kgsl/kgsl-3d0/devfreq/min_freq",
		values:[`while read values; do busybox printf "%s, \n" $values; done < /sys/class/kgsl/kgsl-3d0/gpu_available_frequencies`]
	}},
	{ SPane:{
		title:"Simple GPU Algorithm"
	}},
	{ SCheckBox:{
		label:"Enable simple_gpu_algorithm",
		description:" Open source user configurable simple GPU Control Algorithm used to replace the closed sourced Qualcomm TrustZone GPU controller.",
		default:`cat /sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate`,
                action:"generic /sys/module/simple_gpu_algorithm/parameters/simple_gpu_activate"
        }},
	{ SSeekBar:{
		title:"Laziness",
		description:" Adjusts the number of times the governor skips ramp down requests. Higher = better performance (more battery drain). Default is 4.",
		min:0,
		max:10,
		step:1,
		default:`cat /sys/module/simple_gpu_algorithm/parameters/simple_laziness`,
		action:"generic /sys/module/simple_gpu_algorithm/parameters/simple_laziness",
	}},
	{ SSeekBar:{
		title:"Ramp up threshold",
		description:" Higher value is less agressive. Default is an agressive 5000.",
		max:10000, 
		min:1000,
		step:1000,
		default:`cat /sys/module/simple_gpu_algorithm/parameters/simple_ramp_threshold`,
		action:"generic /sys/module/simple_gpu_algorithm/parameters/simple_ramp_threshold",
	}},
		{ SPane:{
		title:"Adreno idler - Idling algorithm"
	}},
	{ SOptionList:{
		label:"Enable adreno_idler",
		description:" An efficient workaround for msm-adreno-tz's overheads. *(Only works with msm-adreno-tz as governor). Default enabled",
		default:`cat /sys/module/adreno_idler/parameters/adreno_idler_active`,
		action:"generic /sys/module/adreno_idler/parameters/adreno_idler_active",
        values:{
			"N":"Disabled",
			"Y":"Enabled",
			}        
    }},
    { SSeekBar:{
		title:"Idle work load",
		description:" Adreno idler will more actively try to ramp down the frequency if this is set to a higher value. Default is 5000.",
		min:0,
		max:10000,
		step:100,
		default:`cat /sys/module/adreno_idler/parameters/adreno_idler_idleworkload`,
		action:"generic /sys/module/adreno_idler/parameters/adreno_idler_idleworkload",
	}},
	{ SSeekBar:{
		title:"Idle wait",
		description:" Number of events to wait before ramping down the frequency. The idlewait'th events before current one must be all idle before. Adreno idler ramps down the frequency. This implementation is to prevent micro-lags on scrolling or playing games. Adreno idler will more actively try to ramp down the frequency this is set to a lower value. Default is 20.",
		min:0,
		max:100,
		step:1,
		default:`cat /sys/module/adreno_idler/parameters/adreno_idler_idlewait`,
		action:"generic /sys/module/adreno_idler/parameters/adreno_idler_idlewait",
	}},
	{ SSeekBar:{
		title:"Down Differential",
		description:" This variable determines how long the governor will remain at the given frequency before scaling down. Default is 20.",
		min:0,
		max:100,
		step:1,
		default:`cat /sys/module/adreno_idler/parameters/adreno_idler_downdifferential`,
		action:"generic /sys/module/adreno_idler/parameters/adreno_idler_downdifferential",
	}},
    ]
}
CTAG
